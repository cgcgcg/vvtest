#!/usr/bin/env python

# Copyright 2018 National Technology & Engineering Solutions of Sandia, LLC
# (NTESS). Under the terms of Contract DE-NA0003525 with NTESS, the U.S.
# Government retains certain rights in this software.

#RUNTEST:

import sys
sys.dont_write_bytecode = True
sys.excepthook = sys.__excepthook__
import os
import time
import glob

import vvtestutils as vtu
import testutils as util


class runtimes_and_tmin_tmax( vtu.vvtestTestCase ):

    def test_that_tmin_tmax_work_with_execute_analyze_tests(self):
        """
        runtime min/max with execute/analyze tests
        """
        util.write_py_script( "tests/AA.vvt", """
            import os, sys, time
            time.sleep(1)
            """ )
        util.write_py_script( "tests/BB.vvt", """
            #VVT: parameterize : planet=mercury mars venus
            #VVT: analyze : --analyze
            import os, sys, time
            import vvtest_util as vvt
            if '--analyze' not in sys.argv:
                if vvt.planet == 'mercury':
                    time.sleep(1)
                elif vvt.planet == 'mars':
                    time.sleep(3)
                elif vvt.planet == 'venus':
                    time.sleep(7)
            else:
                time.sleep(2)
            """ )
        util.write_py_script( "tests/CC.vvt", """
            import os, sys, time
            time.sleep(7)
            """ )
        util.writefile( 'tests/.git/config', '' )  # for results pathid

        for batch in [False,True]:

            vtu.remove_results()

            for fn in glob.glob( 'vvtresults.*' ):
                util.fault_tolerant_remove( fn )

            vrun = vtu.runvvtest( '--save-results tests', batch=batch )
            vrun.assertCounts( total=6, npass=6 )
            tdir = vrun.resultsDir()

            vtu.remove_results()

            # none of the analyze tests should have been selected
            vrun = vtu.runvvtest( '--tmax 6 tests', batch=batch )
            vrun.assertCounts( total=3, npass=3 )
            assert vrun.getTestIds() == \
                            [ 'AA', 'BB.planet=mars', 'BB.planet=mercury' ]

            vrun = vtu.runvvtest( batch=batch, chdir=tdir )
            vrun.assertCounts( total=0 )

            vrun = vtu.runvvtest( '-R', batch=batch, chdir=tdir )
            vrun.assertCounts( total=3, npass=3 )
            assert vrun.getTestIds() == \
                            [ 'AA', 'BB.planet=mars', 'BB.planet=mercury' ]


########################################################################

util.run_test_cases( sys.argv, sys.modules[__name__] )
