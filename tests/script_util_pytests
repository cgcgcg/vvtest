#!/usr/bin/env python

# Copyright 2018 National Technology & Engineering Solutions of Sandia, LLC
# (NTESS). Under the terms of Contract DE-NA0003525 with NTESS, the U.S.
# Government retains certain rights in this software.

# RUNTEST: vvtest

import sys

sys.dont_write_bytecode = True
sys.excepthook = sys.__excepthook__
import os

import vvtestutils as vtu
import testutils as util

# Get access to script_utils so we can interrogate simple_aprepro's main().
sys.path.insert(0, vtu.cfgdir)


def run_pytests(filename):
    """
    Helper function to run pytests and fail if pytest is not importable
    or if any tests fail.
    """

    try:
        import pytest
    except:
        pytest = None

    if pytest is None:
        print("\n" + " ERROR " * 5)
        print(
            "Pytest not importable. Failing test so you don't think that all these tests actually passed"
        )
        print(" ERROR " * 5 + "\n")
        assert pytest is not None

    pytest_returned = pytest.main(["-vv", filename])

    print(pytest_returned)
    assert pytest_returned == pytest.ExitCode.OK


class ScriptUtilPytests(vtu.vvtestTestCase):
    def test_pytests_timer(self):
        run_pytests(os.path.join(vtu.cfgdir, "script_util/tests/test_timer.py"))

    def test_pytests_flush_streams(self):
        run_pytests(os.path.join(vtu.cfgdir, "script_util/tests/test_flush_streams.py"))

    def test_pytests_wait_for_disk(self):
        run_pytests(os.path.join(vtu.cfgdir, "script_util/tests/test_wait_for_disk.py"))


############################################################################

try:
    import pytest

    util.run_test_cases(sys.argv, sys.modules[__name__])
except Exception:
    pass
