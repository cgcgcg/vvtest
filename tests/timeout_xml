#!/usr/bin/env python

# Copyright 2018 National Technology & Engineering Solutions of Sandia, LLC
# (NTESS). Under the terms of Contract DE-NA0003525 with NTESS, the U.S.
# Government retains certain rights in this software.

#RUNTEST:

import sys
sys.dont_write_bytecode = True
sys.excepthook = sys.__excepthook__
import os
import time

import vvtestutils as vtu
import testutils as util
from testutils import print3


class Timeout_xml_specs( vtu.vvtestTestCase ):

    def test_different_timeout_values(self):
        ""
        platname = vtu.core_platform_name()

        # sleep1 should timeout
        util.writefile( "sleep1.xml", '''
            <rtest name="sleep1">
              <keywords> fast </keywords>
              <execute>
            echo "sleep1 test is sleeping 10 seconds"
            sleep 10
              </execute>
              <timeout value="3"/>
            </rtest>''' )

        # sleep2 should not timeout
        util.writefile( "sleep2.xml", '''
            <rtest name="sleep2">
              <keywords> fast </keywords>
              <execute>
            echo "sleep2 test is sleeping 10 seconds"
            sleep 10
              </execute>
              <timeout value="3"/>
              <timeout platforms="'''+platname+'''" value="0"/>
            </rtest>''' )

        # sleep3 should not timeout
        util.writefile( "sleep3.xml", '''
            <rtest name="sleep3">
              <keywords> fast </keywords>
              <execute>
            echo "sleep3 test is sleeping 10 seconds"
            sleep 10
              </execute>
              <timeout value="3"/>
              <timeout platforms="'''+platname+'''" value="15"/>
            </rtest>''' )
        time.sleep(1)

        for batch in [False,True]:

            vtu.remove_results()

            vrun = vtu.runvvtest( batch=batch )
            vrun.assertCounts( total=3, npass=2, timeout=1 )

            vrun = vtu.runvvtest( '-wT 1.5', batch=batch )
            vrun.assertCounts( total=3, timeout=3 )

            vrun = vtu.runvvtest( '-wT 20', batch=batch )
            vrun.assertCounts( total=3, npass=3 )


########################################################################

util.run_test_cases( sys.argv, sys.modules[__name__] )
