#!/usr/bin/env python

import os, sys
import time
import glob

# this will os.chdir() to a subdirectory
from testutils import *


def main():
    """
    """
    argL = get_arg_list()

    if len(argL) == 0:
        argL = """test01 test02 test03 test04 test05 test06 test07 test08
               """.split()

    savedir = os.getcwd()
    for func in argL:
        os.chdir( savedir )
        rmallfiles()
        time.sleep(1)
        print3( '====> ', func )
        eval( func+'()' )


#####################################################################

def test01():
    """
    nominal parameterize usage
    """
    writefile( 'basic.xml', """
        <rtest name="basic">
          <parameterize np="1 4 8"/>
          <execute> echo "execute basic2 np = $np" </execute>
        </rtest>""" )
    
    out,np,nd,nf,nn = run_vvtest( '-p np<8 -P np=1' )
    assert np == 1 and nd == 0 and nf == 0 and nn == 0

    platname = platform_name( out )
    print "Extracted platname =", platname
    tdir = results_dir()
    
    L = filegrep( tdir + '/basic.np=4/execute.log', 'execute basic2' )
    print "execute", L
    assert len(L) == 1 and L[0].strip() == 'execute basic2 np = 4'
    
    out,np,nd,nf,nn = run_vvtest( '-p np<=8' )
    assert np == 2 and nd == 0 and nf == 0 and nn == 0
    
    out,np,nd,nf,nn = run_vvtest( '-i' )
    assert np == 3 and nd == 0 and nf == 0 and nn == 0
    
    out,np,nd,nf,nn = run_vvtest( '-i -p np=4' )
    assert np == 1 and nd == 0 and nf == 0 and nn == 0
    
    if platname in batchplatforms:
      
        # same thing in batch mode

        remove_results()

        out,np,nd,nf,nn = run_vvtest( '-p np<8 -P np=1 --pipeline --qsub-length 0' )
        assert np == 1 and nd == 0 and nf == 0 and nn == 0
        
        L = filegrep( tdir + '/basic.np=4/execute.log', 'execute basic2' )
        print "execute", L
        assert len(L) == 1 and L[0].strip() == 'execute basic2 np = 4'
        
        out,np,nd,nf,nn = run_vvtest( '-p np<=8 --pipeline --qsub-length 0' )
        assert np == 2 and nd == 0 and nf == 0 and nn == 0
        
        out,np,nd,nf,nn = run_vvtest( '-i -p np=4' )
        assert np == 1 and nd == 0 and nf == 0 and nn == 0


def test02():
    """
    multiple parameterize
    """
    writefile( 'basic.xml', """
        <rtest name="basic">
          <parameterize np="1 4"/>
          <parameterize dt="0.1 0.01"/>
          <execute> echo "execute basic np = $np dt = $dt" </execute>
        </rtest>""" )

    out,np,nd,nf,nn = run_vvtest()
    assert np == 4 and nd == 0 and nf == 0 and nn == 0

    tdir = results_dir()
    platname = platform_name( out )
    
    L = filegrep( tdir+'/basic.dt=0.01.np=4/execute.log', 'execute basic' )
    print "execute", L
    assert len(L) == 1 and L[0].strip() == 'execute basic np = 4 dt = 0.01'

    remove_results()

    out,np,nd,nf,nn = run_vvtest( '-p np=4' )
    assert np == 2 and nd == 0 and nf == 0 and nn == 0
    L = filegrep( tdir + '/basic.dt=0.01.np=4/execute.log', 'execute basic' )
    assert len(L) == 1 and L[0].strip() == 'execute basic np = 4 dt = 0.01'
    L = filegrep( tdir + '/basic.dt=0.1.np=4/execute.log', 'execute basic' )
    assert len(L) == 1 and L[0].strip() == 'execute basic np = 4 dt = 0.1'

    out,np,nd,nf,nn = run_vvtest()
    assert np == 2 and nd == 0 and nf == 0 and nn == 0


    if platname in batchplatforms:
      
        # same thing in batch mode

        remove_results()

        out,np,nd,nf,nn = run_vvtest( '-p np=4 --pipeline --qsub-length 0' )
        assert np == 2 and nd == 0 and nf == 0 and nn == 0
        L = filegrep( tdir + '/basic.dt=0.01.np=4/execute.log', 'execute basic' )
        assert len(L) == 1 and L[0].strip() == 'execute basic np = 4 dt = 0.01'
        L = filegrep( tdir + '/basic.dt=0.1.np=4/execute.log', 'execute basic' )
        assert len(L) == 1 and L[0].strip() == 'execute basic np = 4 dt = 0.1'
        
        out,np,nd,nf,nn = run_vvtest( '--pipeline --qsub-length 0' )
        assert np == 2 and nd == 0 and nf == 0 and nn == 0
        
        out,np,nd,nf,nn = run_vvtest( '-i' )
        assert np == 4 and nd == 0 and nf == 0 and nn == 0


def test03():
    """
    an empty parameterize
    """
    writefile( 'basic.xml', """
        <rtest name="basic">
          <keywords> foobar </keywords>
          <parameterize/>
          <execute> echo "execute basic3 np = $np" </execute>
        </rtest>""" )

    out,np,nd,nf,nn = run_vvtest()
    assert np == 1 and nd == 0 and nf == 0 and nn == 0

    tdir = results_dir()
    platname = platform_name( out )

    L = filegrep( tdir + '/basic/execute.log', 'execute basic3 np = 0' )
    print "execute", L
    assert len(L) == 1 and L[0].strip() == 'execute basic3 np = 0'

    remove_results()

    writefile( 'basic.xml', """
      <rtest name="basic">
        <keywords> foobar </keywords>
        <parameterize keywords="foobar"/>
        <execute> echo "execute basic3 np = $np" </execute>
      </rtest>""")

    out,np,nd,nf,nn = run_vvtest( '-k foobar' )
    assert np == 1 and nd == 0 and nf == 0 and nn == 0

    L = filegrep( tdir + '/basic/execute.log', 'execute basic3 np = 0' )
    print "execute", L
    assert len(L) == 1 and L[0].strip() == 'execute basic3 np = 0'


######################################################################

def test04():
    """
    the keywords in a parameterize should be included in the test keywords
    """
    writefile( 'keyw.xml', """
        <rtest name="keyw">
          <keywords> fast medium </keywords>
          <parameterize not_keywords="full" np="1"/>
          <parameterize keywords="full"     np="2 4"/>
          <analyze> echo "here we are" </analyze>
        </rtest>""" )
    
    out,np,nd,nf,nn = run_vvtest( '-k full' )
    assert np == 3 and nd == 0 and nf == 0 and nn == 0
    fL = glob.glob( 'TestResults.*/keyw/execute.log' )
    assert len(fL) == 1
    fL = glob.glob( 'TestResults.*/keyw.np=*/execute.log' )
    assert len(fL) == 2
    
    out,np,nd,nf,nn = run_vvtest( '-w' )
    assert np == 2 and nd == 0 and nf == 0 and nn == 0
    fL = glob.glob( 'TestResults.*/keyw/execute.log' )
    assert len(fL) == 1
    fL = glob.glob( 'TestResults.*/keyw.np=*/execute.log' )
    assert len(fL) == 1
    

######################################################################

def test05():
    """
    exercise filtering out by parameter on a subsequent run
    """
    writefile( 'params.xml', """
        <rtest name="params">
          <parameterize AA="1 2"/>
          <parameterize BB="foo bar"/>
          <execute> echo "params AA=$AA BB=$BB" </execute>
        </rtest>""" )
    
    out,np,nd,nf,nn = run_vvtest()
    assert np == 4 and nd == 0 and nf == 0 and nn == 0

    tdir = results_dir()
    
    out,np,nd,nf,nn = run_vvtest( '-R -p AA=2' )
    assert np == 2 and nd == 0 and nf == 0 and nn == 0

    os.chdir( tdir+'/params.AA=2.BB=bar' )
    out,np,nd,nf,nn = run_vvtest( '-R' )
    assert np == 1 and nd == 0 and nf == 0 and nn == 0
    
    
#######################################################################

def test06():
    """
    an analyze section has the parameters available
    """
    writefile( 'basic.xml', """
        <rtest name="basic">
          <parameterize np="1 4"/>
          <parameterize dt="0.1 0.01"/>
          <execute> echo "execute basic np = $np dt = $dt" </execute>
          <analyze>
            echo "access PARAM_np = $PARAM_np"
            echo "access PARAM_dt = $PARAM_dt"
          </analyze>
        </rtest> """ )
    
    out,np,nd,nf,nn = run_vvtest()
    assert np == 5 and nd == 0 and nf == 0 and nn == 0

    tdir = results_dir()

    L = filegrep( tdir + '/basic/execute.log', 'access PARAM_np' )
    assert len(L) == 1
    pL = L[0].split( '=', 1 )[1].strip().split()
    assert pL == ['1','4']
    L = filegrep( tdir + '/basic/execute.log', 'access PARAM_dt' )
    assert len(L) == 1
    pL = L[0].split( '=', 1 )[1].strip().split()
    assert pL == ['0.1','0.01']

    cwd = os.getcwd()
    os.chdir( tdir+'/basic' )
    out,np,nd,nf,nn = run_vvtest( '-R' )
    assert np == 1 and nd == 0 and nf == 0 and nn == 0
    L = filegrep( 'execute.log', 'access PARAM_np' )
    assert len(L) == 1
    pL = L[0].split( '=', 1 )[1].strip().split()
    assert pL == ['1','4']
    L = filegrep( 'execute.log', 'access PARAM_dt' )
    assert len(L) == 1
    pL = L[0].split( '=', 1 )[1].strip().split()
    assert pL == ['0.1','0.01']
    os.chdir( cwd )
    
    rmallfiles()
    
    writefile( 'zip.xml', """
        <rtest name="zip">
          <parameterize np="1 4" dt="0.1 0.01"/>
          <execute> echo "execute zip np = $np dt = $dt" </execute>
          <analyze>
            echo "access PARAM_np_dt = $PARAM_np_dt"
          </analyze>
        </rtest> """ )
    
    out,np,nd,nf,nn = run_vvtest()
    assert np == 3 and nd == 0 and nf == 0 and nn == 0
    L = filegrep( tdir+'/zip/execute.log', 'access PARAM_np_dt' )
    assert len(L) == 1
    pL = L[0].split( '=', 1 )[1].strip().split()
    assert pL == ['1/0.1','4/0.01']
    
    os.chdir( tdir+'/zip' )
    out,np,nd,nf,nn = run_vvtest( '-R' )
    assert np == 1 and nd == 0 and nf == 0 and nn == 0
    L = filegrep( 'execute.log', 'access PARAM_np_dt' )
    assert len(L) == 1
    pL = L[0].split( '=', 1 )[1].strip().split()
    assert pL == ['1/0.1','4/0.01']


#######################################################################

def test07():
    """
    using a more complex parameter expression on the command line with a rerun
    """
    writefile( 'basic.xml', """
        <rtest name="basic">
          <parameterize isize="1 2 4"/>
          <execute> echo "execute basic isize = $isize" </execute>
          <analyze>
            echo "access PARAM_isize = $PARAM_isize"
          </analyze>
        </rtest> """)
    
    out,np,nd,nf,nn = run_vvtest( ['-p','isize<=2 or not isize'] )
    assert np == 3 and nd == 0 and nf == 0 and nn == 0

    tdir = results_dir()
    assert     os.path.exists( tdir+'/basic.isize=1' )
    assert     os.path.exists( tdir+'/basic.isize=2' )
    assert not os.path.exists( tdir+'/basic.isize=4' )
    assert     os.path.exists( tdir+'/basic' )

    os.chdir( tdir+'/basic' )
    out,np,nd,nf,nn = run_vvtest( '-R' )
    assert np == 1 and nd == 0 and nf == 0 and nn == 0


def test08():
    """
    an analyze section sees restricted parameters
    """
    writefile( 'basic.xml', """
        <rtest name="basic">
          <parameterize isize="1 2 4"/>
          <execute> echo "execute basic isize = $isize" </execute>
          <analyze>
            echo "access PARAM_isize = $PARAM_isize"
          </analyze>
        </rtest> """ )
    
    out,np,nd,nf,nn = run_vvtest( ['-p','isize<=2 or not isize'] )
    assert np == 3 and nd == 0 and nf == 0 and nn == 0

    tdir = results_dir()
    assert os.path.exists( tdir+'/basic' )
    L = filegrep( tdir+'/basic/execute.log', "access PARAM_isize" )
    assert len(L) == 1
    s = L[0]
    ps = L[0].split('=',1)[1]
    pL = ps.strip().split()
    assert pL == ['1', '2']

    os.chdir( tdir+'/basic' )
    out,np,nd,nf,nn = run_vvtest( '-R' )
    assert np == 1 and nd == 0 and nf == 0 and nn == 0
    
    L = filegrep( 'execute.log', "access PARAM_isize" )
    assert len(L) == 1
    s = L[0]
    ps = L[0].split('=',1)[1]
    pL = ps.strip().split()
    assert pL == ['1', '2']


#####################################################################

main()
