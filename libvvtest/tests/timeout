#!/usr/bin/env python

import os, sys
import time

# this will os.chdir() to a subdirectory
from testutils import *

def main():
    """
    """
    argL = get_arg_list()

    if len(argL) == 0:
        argL = """test01 test02
               """.split()

    cwd = os.getcwd()
    for func in argL:
        os.chdir( cwd )
        rmallfiles()
        time.sleep(1)
        print3( '====> ', func )
        eval( func+'()' )


########################################################################

def test01():
    """
    """
    writefile( "null.xml", """
        <rtest name="null">
        </rtest>""" )

    out,np,nd,nf,nn = run_vvtest()
    assert np == 1 and nd == 0 and nf == 0 and nn == 0

    platname = platform_name( out )
    print "Extracted platname =", platname


    # sleep1 should timeout
    writefile( "sleep1.xml", '''
        <rtest name="sleep1">
          <keywords> fast </keywords>
          <execute>
        echo "sleep1 test is sleeping 10 seconds"
        sleep 10
          </execute>
          <timeout value="3"/>
        </rtest>''' )

    # sleep2 should not timeout
    writefile( "sleep2.xml", '''
        <rtest name="sleep2">
          <keywords> fast </keywords>
          <execute>
        echo "sleep2 test is sleeping 10 seconds"
        sleep 10
          </execute>
          <timeout value="3"/>
          <timeout platforms="'''+platname+'''" value="0"/>
        </rtest>''' )

    # sleep3 should not timeout
    writefile( "sleep3.xml", '''
        <rtest name="sleep3">
          <keywords> fast </keywords>
          <execute>
        echo "sleep3 test is sleeping 10 seconds"
        sleep 10
          </execute>
          <timeout value="3"/>
          <timeout platforms="'''+platname+'''" value="15"/>
        </rtest>''' )

    out,np,nd,nf,nn = run_vvtest()
    assert np == 2 and nd == 0 and nf == 0 and nn == 0
    assert numtimeout(out) == 1

    out,np,nd,nf,nn = run_vvtest( '-wT 1.5' )
    assert np == 1 and nd == 0 and nf == 0 and nn == 0
    assert numtimeout(out) == 3

    out,np,nd,nf,nn = run_vvtest( '-wT 20' )
    assert np == 4 and nd == 0 and nf == 0 and nn == 0
    assert numtimeout(out) == 0


def test02():
    """
    same as test02 but in batch mode
    """
    writefile( "null.xml", """
        <rtest name="null">
        </rtest>""" )

    out,np,nd,nf,nn = run_vvtest()
    assert np == 1 and nd == 0 and nf == 0 and nn == 0
    platname = platform_name( out )
    
    if platname == 'Linux' or platname == 'iDarwin':
      
        # sleep1 should timeout
        writefile( "sleep1.xml", '''
            <rtest name="sleep1">
              <keywords> fast </keywords>
              <execute>
            echo "sleep1 test is sleeping 10 seconds"
            sleep 10
              </execute>
              <timeout value="3"/>
            </rtest>''' )
        
        # sleep2 should not timeout
        writefile( "sleep2.xml", '''
            <rtest name="sleep2">
              <keywords> fast </keywords>
              <execute>
            echo "sleep2 test is sleeping 10 seconds"
            sleep 10
              </execute>
              <timeout value="3"/>
              <timeout platforms="'''+platname+'''" value="0"/>
            </rtest>''' )
        
        # sleep3 should not timeout
        writefile( "sleep3.xml", '''
            <rtest name="sleep3">
              <keywords> fast </keywords>
              <execute>
            echo "sleep3 test is sleeping 10 seconds"
            sleep 10
              </execute>
              <timeout value="3"/>
              <timeout platforms="'''+platname+'''" value="15"/>
            </rtest>''' )
        
        out,np,nd,nf,nn = run_vvtest( '--pipeline' )
        assert np == 2 and nd == 0 and nf == 0 and nn == 0
        assert numtimeout(out) == 1
        
        out,np,nd,nf,nn = run_vvtest( '--pipeline -wT 1.5' )
        assert np == 1 and nd == 0 and nf == 0 and nn == 0
        assert numtimeout(out) == 3
        
        out,np,nd,nf,nn = run_vvtest( '--pipeline -wT 20' )
        assert np == 4 and nd == 0 and nf == 0 and nn == 0
        assert numtimeout(out) == 0


########################################################################

main()
