#!/usr/bin/python

import sys
sys.dont_write_bytecode = True
sys.excepthook = sys.__excepthook__
import os
import getopt

import dasherlib


help_dasher = \
"""
SYNOPSIS
    Create static web pages from vvtest results sent to a Git repository.

USAGE:
    dasher --gitlab <project URL> <pathname>

OPTIONS:
    --title <string> : sets the title on the landing page (the summary page)
    --label <name>   : only include results for this label; may be repeated
    --info 'label->description' : use 'description' for the 'label' row entry;
                                  may be repeated
"""


def main():
    ""
    optL,argL = getopt.getopt( sys.argv[1:], 'h',
                               ['help','gitlab=','title=','label=','info='] )

    optD = {}
    for n,v in optL:
        if n == '-h' or n == '--help':
            print3( help_dasher.strip() )
            return
        elif n in [ '--label', '--info' ]:
            optD[n] = optD.get(n,[]) + [v]
        else:
            optD[n] = v

    if len(argL) == 0:
        errorexit( 'no output path given' )

    if '--gitlab' not in optD:
        errorexit( 'the --gitlab option must be given' )

    giturl = optD['--gitlab']
    pathname = argL[0]

    dash = dasherlib.DashboardCreator( giturl )

    set_visible_labels( dash, optD.get( '--label', None ) )
    set_label_descriptions( dash, optD.get( '--info', None ) )

    dash.readResults()
    dash.writePages( pathname, title=optD.get( '--title', None ) )


def set_visible_labels( dash, labels ):
    ""
    if labels:
        dash.setVisibleLabels( labels )


def set_label_descriptions( dash, infolist ):
    ""
    if infolist:
        for info in infolist:
            infL = info.split( '->', 1 )
            if len( infL ) == 2:
                name = infL[0].strip()
                desc = infL[1].strip()
                dash.setLabelInfo( name, desc )


def print3( *args ):
    ""
    sys.stdout.write( ' '.join( [ str(arg) for arg in args ] ) + '\n' )
    sys.stdout.flush()


def errorexit( *args ):
    ""
    err = '*** dasher error: '+' '.join( [ str(arg) for arg in args ] )
    sys.stderr.write( err + '\n' )
    sys.stderr.flush()
    sys.exit(1)


####################################################################

main()
