==================================

           Night Vision

v 1.0.0
==================================
Last updated: July 31, 2017

This Graphical User Interface is an application to display Jenkins nightly processes for the DevOps
team and store basic information about each proccess.

If you are editing this application, you should be aware that this GUI:

1. Is written in the Model/View/Controller style
2. Is written entirely in python (except for the execution script)
3. Uses the Tkinter module
4. Uses the unittest module for testing
5. Obtains process information from the "triglog.py" file

And are encouraged to:

1. View, edit, and run the tests provided at the 'unittests' directory
2. Continue the Model/View/Controller style
3. Improve the code in anyway and add any features you would like
4. Ensure that the GUI stays user friendly


Appliction structure:

- There are three critical files: nightvision, gui.py, and model.py
  > nightvision starts the application
  > gui.py has the View and Controller portion of the application
  > model.py has the Model portion of the application

- There is a file named resources/colors.txt that contains roughly 115 colors from which the
  application generates the colors it uses to draw that processes.

- The 'local_database' directory contains .json files for each day that has been viewed by the
  application. The .json files contain all processes and their information that started on a
  particular day.


In project directory, there is a subdirectory called "resources." It may be usefull to know that:

1. The "colors.txt" file is not actively used by the application. It is merely a list of colors
   which can be used to draw the processes
2. The "helpstr.txt" file contains general help info that's displayed when using the -h argument on
   nightvision or clicking on the "Help" button within the GUI.
3. The "logs.json" file contains temporary information generated by triglog.py so that the GUI can
   read it.
4. The "log_sources.txt" file contains the filepaths for triglog.py to check in order to get log
   data.
5. The "orig-triglog.py" file is the original triglog.py file written by Rich Drake, which was then
   modified to fit the GUI as the triglog.py file in the project directory.
6. The "palette.txt" file is used by the application to color the processes. The file includes
   several color codes, which correspond to the level of depth of each process. For example,
   the root processes will take the color which is listed first in the file (orange). Subproccesses
   of those root processes will take the color which is listed second in the file (dark red), and
   so on and so forth.
7. The "window_information.json" file currently only contains the size of the window to be
   displayed.
