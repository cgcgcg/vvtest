#!/usr/bin/python

import sys
sys.dont_write_bytecode = True
sys.excepthook = sys.__excepthook__
import os
import getopt

import mrgitlib


help_mrgit = \
"""
SYNOPSIS
    Multi-Repository Git.

COMMANDS:
    mrgit clone [-G] [<repository>] [<directory>]

    The <repository> can be a manifests URL or another mrgit clone URL.
    If more than one <repository> is given, an mrgit repository is created
    and populated with those.

    mrgit init ???
"""

notes = """

    mrgit [OPTIONS] clone [repo[,repo,...]] [directory]

Upon clone, set/add to .git/info/exclude
    - the .mrgit subdirectory
    - sub-repositories

multiple repository version control git manager utility tool
tie combine coordinate 
mrgit
git wrapper for multiple repository managment
grap = Git wRAPper
mrgrap
"""


def main():
    ""
    optL,argL = getopt.getopt( sys.argv[1:], 'h', ['help'] )

    optD = {}
    for n,v in optL:
        if n == '-h' or n == '--help':
            mrgitlib.print3( help_mrgit.strip() )
            return
        optD[n] = v

    if len(argL) == 0:
        mrgitlib.print3( help_mrgit.strip() )
        mrgitlib.errorexit( 'no command given' )

    cmd = argL[0]

    if cmd == 'help':
        mrgitlib.print3( help_mrgit.strip() )

    elif cmd == 'clone':
        mrgitlib.clone( argL[1:] )

    else:
        mrgitlib.errorexit( '*** unknown mrgit command:', cmd )


####################################################################

try:
    main()
except mrgitlib.MRGitExitError as exc:
    mrgitlib.print3( '*** mrgit error:', exc )
    sys.exit(1)
