#!/usr/bin/env python

# Copyright 2018 National Technology & Engineering Solutions of Sandia, LLC
# (NTESS). Under the terms of Contract DE-NA0003525 with NTESS, the U.S.
# Government retains certain rights in this software.

#RUNTEST:

import sys
sys.dont_write_bytecode = True
sys.excepthook = sys.__excepthook__
import os
import time
import unittest

import vvtestutils as vtu
import testutils as util
from testutils import print3


class filter_and_search_searching( unittest.TestCase ):

    def setUp(self):
        util.setup_test()

    def test_filter_tests_by_input_file_search(self):
        ""
        util.writefile( 'solar.inp', """
            foo and bar
            this and that
            """ )
        util.writefile( 'solar.xml', """
            <rtest name="solar">
              <execute> echo "solar ran" </execute>
              <link_files> solar.inp </link_files>
            </rtest>""" )
        util.writescript( 'extrasolar.vvt', """
            #!/usr/bin/env python
            #VVT: link : solar.inp
            import os
            print ( "extrasolar ran" )
            """ )
        time.sleep(1)

        for batch in [False,True]:

            vtu.remove_results()

            vrun = vtu.runvvtest( batch=batch )
            vrun.assertCounts( total=2, npass=2 )

            vtu.remove_results()
            vrun = vtu.runvvtest( '--search foo', batch=batch )
            vrun.assertCounts( total=2, npass=2 )

            vtu.remove_results()
            vrun = vtu.runvvtest( '--search aliensrock', batch=batch )
            vrun.assertCounts( total=0 )

            vtu.remove_results()
            vrun = vtu.runvvtest( '--search foo', batch=batch )
            vrun.assertCounts( total=2, npass=2 )

            vrun = vtu.runvvtest( '-R --search aliensrock', batch=batch )
            vrun.assertCounts( total=0 )

            vrun = vtu.runvvtest( '-R --search foo', batch=batch )
            vrun.assertCounts( total=2, npass=2 )


########################################################################

util.run_test_cases( sys.argv, sys.modules[__name__] )
