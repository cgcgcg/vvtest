#!/usr/bin/env python

# Copyright 2018 National Technology & Engineering Solutions of Sandia, LLC
# (NTESS). Under the terms of Contract DE-NA0003525 with NTESS, the U.S.
# Government retains certain rights in this software.

#RUNTEST:

"""
This test can be run like any other, and exercises the performance test
functions.

Or this script can be used to manually execute the performance tests.  Run
it with the names of performance test function(s) on the command line to run
those functions.  For example,

    $ perf perf_variable_expand_medium
"""

import sys
sys.dont_write_bytecode = True
sys.excepthook = sys.__excepthook__
import os
import glob
import time

import vvtestutils as vtu
import testutils as util
from testutils import print3

import libvvtest.TestList as TestList
import libvvtest.TestSpecCreator as TestSpecCreator
import libvvtest.FilterExpressions as FilterExpressions

class performance_cases( vtu.vvtestTestCase ):

    def setUp(self):
        vtu.vvtestTestCase.setUp( self, cleanout=False )

    def test_variableExpansion_function(self):
        ""
        perf_variable_expand( 10 )


#####################################################################

def perf_variable_expand( num_iterations=10 ):
    ""
    pD = { 'np':'4', 'dt':'0.01' }
    t0 = time.time()
    i = 0
    while i < num_iterations:
        fL = [ ['foo{$np}_bar.$dt', 'foo{$np}_bar.$dt.base'],
               ['blah{$np}_junk.$dt', 'blah{$np}_junk.$dt.base'] ]
        TestSpecCreator.variableExpansion( 'tname', 'platname', pD, fL )
        i += 1
    t1 = time.time()
    print3( 'loop time =', t1-t0 )

def perf_variable_expand_medium():
    perf_variable_expand( 10000 )

def perf_variable_expand_long():
    perf_variable_expand( 200000 )


def alegra01():
    """
    a manual test that scans the alegra/emphasis test tree
    """
    tl = TestList.TestList()
    t0 = time.time()
    #tl.scanDirectory( '/home/rrdrake/Alegra/Benchmarks' )
    tl.scanDirectory( '/scratch/rrdrake/ta/Benchmarks' )
    print3( 'time=', time.time()-t0 )


#####################################################################

L = list( filter( lambda arg: arg.startswith('perf_'), sys.argv[1:] ) )
if len(L) > 0:
    for func in L:
        eval( func+'()' )
else:
    util.run_test_cases( sys.argv, sys.modules[__name__] )
