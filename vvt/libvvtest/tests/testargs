#!/usr/bin/env python

# Copyright 2018 National Technology & Engineering Solutions of Sandia, LLC
# (NTESS). Under the terms of Contract DE-NA0003525 with NTESS, the U.S.
# Government retains certain rights in this software.

#RUNTEST:

import sys
sys.dont_write_bytecode = True
sys.excepthook = sys.__excepthook__
import os
import time
import glob
import unittest

import testutils as util
from testutils import print3


class test_arguments( unittest.TestCase ):

    def setUp(self):
        util.setup_test()

    def test_use_command_line_option_to_add_test_script_options(self):
        ""
        util.writefile( 'atest.xml', """
            <rtest name="atest">
              <parameterize nx="1 4"/>
              <execute>
                echo "script args $argv"
              </execute>
            </rtest>""" )
        util.writescript( 'btest.vvt', """
            #!/usr/bin/env python
            #VVT: parameterize : planet=earth mars
            import sys
            print ( 'script args '+' '.join( sys.argv[1:] ) )
            """ )
        time.sleep(1)

        testargs = '--test-args=--dummy --test-args=foo'

        for batch in [False,True]:

            util.remove_results()

            vrun = util.runvvtest( testargs, batch=batch )
            vrun.assertCounts( total=4, npass=4 )
            assert vrun.getTestIds() == [ 'atest.nx=1',
                                          'atest.nx=4',
                                          'btest.planet=earth',
                                          'btest.planet=mars' ]

            assert vrun.countGrepLogs( 'script args *--dummy *foo' ) == 4

            tdir = vrun.resultsDir()

            vrun = util.runvvtest( testargs, '-R -p nx=4/planet=earth',
                                   batch=batch, chdir=tdir )
            vrun.assertCounts( total=2, npass=2 )

            assert vrun.getTestIds() == [ 'atest.nx=4',
                                          'btest.planet=earth' ]

            assert vrun.countGrepLogs( 'script args *--dummy *foo' ) == 4


########################################################################

util.run_test_cases( sys.argv, sys.modules[__name__] )
