#!/usr/bin/env python

# Copyright 2018 National Technology & Engineering Solutions of Sandia, LLC
# (NTESS). Under the terms of Contract DE-NA0003525 with NTESS, the U.S.
# Government retains certain rights in this software.

#RUNTEST:

import sys
sys.dont_write_bytecode = True
sys.excepthook = sys.__excepthook__
import os
import unittest
import time
import glob

import testutils as util
from testutils import print3

from libvvtest.misc import find_vvtest_test_root_file


class Function_find_vvtest_test_root_file( unittest.TestCase ):

    def setUp(self):
        util.setup_test()

    def test_no_marker_file_exists(self):
        ""
        p = find_vvtest_test_root_file( os.getcwd(), None, 'foobar.baz' )
        assert p == None

        p = find_vvtest_test_root_file( os.getcwd(), os.getcwd(), 'foobar.baz' )
        assert p == None

    def test_marker_file_in_start_directory(self):
        ""
        util.writefile( 'foobar.baz', 'junk' )
        time.sleep(1)

        p = find_vvtest_test_root_file( os.getcwd(), None, 'foobar.baz' )
        assert p == os.path.abspath( 'foobar.baz' )

        p = find_vvtest_test_root_file( os.getcwd(), os.getcwd(), 'foobar.baz' )
        assert p == os.path.abspath( 'foobar.baz' )

    def test_marker_file_in_parent_directory(self):
        ""
        util.writefile( 'foobar.baz', 'junk' )
        os.makedirs( 'subdir/deep' )
        time.sleep(1)

        startd = os.path.abspath( 'subdir' )
        markf = os.path.abspath( 'foobar.baz' )

        p = find_vvtest_test_root_file( startd, None, 'foobar.baz' )
        assert p == markf

        p = find_vvtest_test_root_file( startd, os.getcwd(), 'foobar.baz' )
        assert p == None

        startd = os.path.abspath( 'subdir/deep' )
        markf = os.path.abspath( 'foobar.baz' )

        p = find_vvtest_test_root_file( startd, None, 'foobar.baz' )
        assert p == markf

        p = find_vvtest_test_root_file( startd, os.getcwd(), 'foobar.baz' )
        assert p == None


############################################################################

util.run_test_cases( sys.argv, sys.modules[__name__] )
